"use strict";var jonsmusicApp={};jonsmusicApp=angular.module("jonsmusicApp",["ui.router","ngRoute","ngCookies","ngResource","ngSanitize","http-auth-interceptor","ui.bootstrap","angularMoment"]).config(function(n,e){n.when("/songs",{controller:"songsListController",templateUrl:"/views/songs/index.html"}).when("/songs/:songId",{controller:"songsDetailController",templateUrl:"/views/songs/edit.html"}).when("/albums",{controller:"albumsListController",templateUrl:"/views/albums/index.html"}).when("/albums/:albumId",{controller:"albumsDetailController",templateUrl:"/views/albums/edit.html"}).when("/login",{templateUrl:"views/auth/login.html",controller:"loginController"}).when("/signup",{templateUrl:"/views/auth/signup.html",controller:"signupController"}).otherwise({redirectTo:"/index",templateUrl:"/views/main/index.html"}),e.html5Mode(!0)}).run(function(n,e,o){n.$watch("currentUser",function(n){n||-1!=["/","/login","/logout","/signup"].indexOf(e.path())||o.currentUser()}),n.$on("event:auth-loginRequired",function(){return e.path("/login"),!1})}),angular.module("jonsmusicApp").service("albumsService",["$http",function(n){return{create:function(e){return n.post("/api/albums",e)},index:function(){return n.get("/api/albums")},show:function(e){return n.get("/api/albums/"+e)},update:function(e,o){return n.put("/api/albums/"+e,o)},"delete":function(e){return n.delete("/api/albums/"+e)}}}]),angular.module("jonsmusicApp").factory("authService",function(n,e,o,t,r){return e.currentUser=r.get("user")||null,r.remove("user"),{login:function(n,t,r){var a=r||angular.noop;o.save({provider:n,email:t.email,password:t.password,rememberMe:t.rememberMe},function(n){return e.currentUser=n,a()},function(n){return a(n.data)})},logout:function(n){var t=n||angular.noop;o.delete(function(){return e.currentUser=null,t()},function(n){return t(n.data)})},createUser:function(n,o){var r=o||angular.noop;t.save(n,function(n){return e.currentUser=n,r()},function(n){return r(n.data)})},currentUser:function(){o.get(function(n){e.currentUser=n})},changePassword:function(n,e,o,r){var a=r||angular.noop;t.update({email:n,oldPassword:e,newPassword:o},function(){return console.log("password changed"),a()},function(n){return a(n.data)})},removeUser:function(n,e,o){var r=o||angular.noop;t.delete({email:n,password:e},function(n){return console.log(n+"removed"),r()},function(n){return r(n.data)})}}}),angular.module("jonsmusicApp").factory("sessionService",function(n){return n("/auth/session/")}),angular.module("jonsmusicApp").service("songsService",["$http",function(n){return{create:function(e){return n.post("/api/songs",e)},index:function(){return n.get("/api/songs")},show:function(e){return n.get("/api/songs/"+e)},update:function(e,o){return n.put("/api/songs/"+e,o)},"delete":function(e){return n.delete("/api/songs/"+e)}}}]),angular.module("jonsmusicApp").factory("userService",function(n){return n("/auth/users/:id/",{},{update:{method:"PUT"}})}),angular.module("jonsmusicApp").directive("jaDatePicker",function(){return{scope:{bind:"="},templateUrl:"/views/templates/ja_datepicker.html",transclude:!0,controller:function(n){n.open=function(e){e.preventDefault(),e.stopPropagation(),n.opened=!0}}}}),angular.module("jonsmusicApp").controller("albumsListController",["$scope","albumsService",function(n,e){n.formData={},n.loading=!0,e.index().success(function(e){n.albums=e,n.loading=!1}),n.createAlbum=function(){n.formData.title&&""!==n.formData.title.trim()&&(n.loading=!0,e.create(n.formData).success(function(){e.index().success(function(e){n.formData={},n.albums=e,n.loading=!1})}))},n.deleteAlbum=function(o){n.loading=!0,e.delete(o).success(function(){e.index().success(function(e){n.formData={},n.albums=e,n.loading=!1})})}}]),angular.module("jonsmusicApp").controller("albumsDetailController",["$scope","$routeParams","$location","$filter","albumsService",function(n,e,o,t,r){n.formData={},n.loading=!0,r.show(e.albumId).success(function(e){n.album=e,n.formData.title=n.album.title,n.formData.description=n.album.description,n.album.date&&(n.formData.date=moment.utc(n.album.date).format("YYYY/MM/DD")),n.loading=!1}),n.updateAlbum=function(){void 0!==n.formData.title&&(n.loading=!0,n.formData.date&&(n.formData.date=moment.utc(n.formData.date).format("YYYY/MM/DD")),r.update(n.album._id,n.formData).success(function(e){n.loading=!1,n.formData={},n.albums=e,o.path("/albums")}))}}]),angular.module("jonsmusicApp").controller("loginController",function(n,e,o){n.error={},n.user={},n.login=function(t){e.login("password",{email:n.user.email,password:n.user.password},function(e){n.errors={},e?(angular.forEach(e.errors,function(e,o){t[o].$setValidity("mongoose",!1),n.errors[o]=e.type}),n.error.other=e.message):o.path("/")})}}),angular.module("jonsmusicApp").controller("navbarController",function(n,e,o){n.menu=[],n.authMenu=[{title:"Songs",link:"songs"},{title:"Albums",link:"albums"}],n.logout=function(){e.logout(function(n){n||o.path("/login")})}}),angular.module("jonsmusicApp").controller("signupController",function(n,e,o){n.register=function(t){e.createUser({email:n.user.email,username:n.user.username,password:n.user.password},function(e){n.errors={},e?angular.forEach(e.errors,function(e,o){t[o].$setValidity("mongoose",!1),n.errors[o]=e.type}):o.path("/")})}}),angular.module("jonsmusicApp").controller("songsListController",["$scope","$filter","songsService",function(n,e,o){n.formData={},n.loading=!0,o.index().success(function(e){n.songs=e,n.loading=!1}),n.createSong=function(){n.formData.title&&""!==n.formData.title.trim()&&(n.loading=!0,o.create(n.formData).success(function(){o.index().success(function(e){n.formData={},n.songs=e,n.loading=!1})}))},n.deleteSong=function(e){n.loading=!0,o.delete(e).success(function(){o.index().success(function(e){n.formData={},n.songs=e,n.loading=!1})})}}]),angular.module("jonsmusicApp").controller("songsDetailController",["$scope","$routeParams","$location","$filter","songsService",function(n,e,o,t,r){n.formData={},n.loading=!0,r.show(e.songId).success(function(e){n.song=e,n.formData.title=n.song.title,n.formData.lyrics=n.song.lyrics,n.song.date&&(n.formData.date=moment.utc(n.song.date).format("YYYY/MM/DD")),n.loading=!1}),n.updateSong=function(){void 0!==n.formData.title&&(n.loading=!0,n.formData.date&&(n.formData.date=moment.utc(n.formData.date).format("YYYY/MM/DD")),r.update(n.song._id,n.formData).success(function(e){n.loading=!1,n.formData={},n.songs=e,o.path("/songs")}))}}]);